#*
 *   $Id$
 * 
 *   Copyright 2006 University of Dundee. All rights reserved.
 *   Use is subject to license terms supplied in LICENSE.txt
 * 
 *#
/*
 *   \$Id\$
 * 
 *   Copyright 2006 University of Dundee. All rights reserved.
 *   Use is subject to license terms supplied in LICENSE.txt
 * 
 */



// Generated by templates/cpp_objects.vm

#if(!$pojo.classModifiers.contains("abstract")) ####################### ONLY IF NOT ABSTRACT

namespace omero { namespace model {

    ${pojo.declarationName}I::~${pojo.declarationName}I() {}
    ${pojo.declarationName}I::${pojo.declarationName}I() {
        loaded = true;
########################################################
#foreach( $property in $pojo.propertyClosureForFullConstructor())
#set(     $name = $pojo.getPropertyName($property))
#set(     $javaType = $c2j.getJavaTypeName($property,false))##generics
#set(     $seqName = "${pojo.declarationName}${name.substring(0,1).toUpperCase()}${name.substring(1,$name.length())}Seq" )## seqName copied from ice_defs.vm
#if(      $javaType.startsWith("java.util.Set") )
##
        set${name}($seqName());
##
#elseif(  $javaType.startsWith("java.util.List") )
## 
        set${name}($seqName());
##
#end
#end
########################################################
    }

  ${pojo.declarationName}I::${pojo.declarationName}I(omero::RLongPtr idPtr, bool isLoaded) {
    id = idPtr;
    loaded = isLoaded; 
  }


  void ${pojo.declarationName}I::unload(const Ice::Current& c) {
#foreach($property in $pojo.propertyClosureForFullConstructor())
#set( $field = "${property.name}")
#set( $seqName = "${pojo.declarationName}${field.substring(0,1).toUpperCase()}${field.substring(1,$field.length())}Seq" )## seqName copied from ice_defs.vm
#set( $name = $pojo.getPropertyName($property) )
#set( $javaType = $c2j.getJavaTypeName($property,false))##generics
#set( $shortType = $c2j.unqualify($javaType) )
#if(!$clazz.identifierProperty.equals($property))
## IF JAVA_TYPE (see copy() method below)
#if( $javaType.startsWith("ome"))
#set( $javaType = "omero::model::${shortType}Ptr" )
#elseif( $javaType.startsWith("IObject"))
#set( $javaType = "omero::model::IObjectPtr")
#elseif( $javaType.startsWith("java.util.List"))
#set( $javaType = "$seqName" )
#set( $prefix = "${property.name} == 0 ? 0 /*FIXME*/ : " ) ## TODO or just null?
#set( $unloadedstmt = "if (${property.name} > 0) { ${property.Name}Loaded = true; } else { ${property.Name}Loaded = false; }" )
#elseif( $javaType.startsWith("java.util.Set"))
#set( $javaType = "$seqName" )
#set( $prefix = "${property.name} == 0 ? 0 /*FIXME*/ : " ) ## TODO or just null?
#set( $unloadedstmt = "if (${property.name} > 0) { ${property.Name}Loaded = true; } else { ${property.Name}Loaded = false; }" )
#elseif( $javaType.startsWith("java.lang.Boolean"))
#set( $javaType   = "omero::RBoolPtr" )
#elseif( $javaType.startsWith("java.lang.Integer"))
#set( $javaType   = "omero::RIntPtr" )
#elseif( $javaType.startsWith("java.lang.Long"))
#set( $javaType   = "omero::RLongPtr" )
#elseif( $javaType.startsWith("java.lang.Double"))
#set( $javaType   = "omero::RDoublePtr" )
#elseif( $javaType.startsWith("java.lang.Float"))
#set( $javaType   = "omero::RFloatPtr" )
#elseif( $javaType.startsWith("long")) ## for Permissions
#set( $javaType = "long" )
#elseif( $javaType.startsWith("java.sql.Timestamp")) ## for Event
#set( $javaType = "omero::RTimePtr" )
#elseif( $javaType.startsWith("java.lang.String")) ## for Event
#set( $javaType = "omero::RStringPtr" )
#else
ERROR ========> $property
#end ##END JAVA_TYPE
      set$name( ($javaType) 0 );
#end
#end	
      loaded = false;

    }

} }

#end############################################################## ONLY IF NOT ABSTRACT
#stop
